spring:
  application.name: trigger-service
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_DEFAULT_USER:guest}
    password: ${RABBITMQ_DEFAULT_PASS:guest}
management.endpoints.web.exposure.include: health,info,prometheus

# Include traceId from MDC in log output
logging:
  pattern.level: "%5p [%X{traceId}]"

pockethive:
  worker:
    swarm-id: ${POCKETHIVE_WORKER_SWARM_ID:${ph.swarmId:${PH_SWARM_ID:default}}}
    queues:
      gen: ${POCKETHIVE_WORKER_QUEUES_GEN:${ph.genQueue:${PH_GEN_QUEUE:ph.${pockethive.worker.swarm-id}.gen}}}
      mod: ${POCKETHIVE_WORKER_QUEUES_MOD:${ph.modQueue:${PH_MOD_QUEUE:ph.${pockethive.worker.swarm-id}.mod}}}
      final: ${POCKETHIVE_WORKER_QUEUES_FINAL:${ph.finalQueue:${PH_FINAL_QUEUE:ph.${pockethive.worker.swarm-id}.final}}}
  trigger:
    interval-ms: ${POCKETHIVE_TRIGGER_INTERVAL_MS:${ph.trigger.intervalMs:60000}}
    action-type: ${POCKETHIVE_TRIGGER_ACTION_TYPE:${ph.trigger.actionType:shell}}
    command: ${POCKETHIVE_TRIGGER_COMMAND:${ph.trigger.command:echo hello}}
    url: ${POCKETHIVE_TRIGGER_URL:${ph.trigger.url:${PH_TRIGGER_URL:http://wiremock}}}
    method: ${POCKETHIVE_TRIGGER_METHOD:${ph.trigger.method:GET}}
    body: ""
    headers: {}
  control-plane:
    swarm-id: ${pockethive.worker.swarm-id}
    worker:
      role: trigger
      swarm-id: ${pockethive.worker.swarm-id}
      instance-id: ${bee.name:${random.uuid}}
      skip-self-signals: false
    manager:
      enabled: false
