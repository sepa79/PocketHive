
openapi: 3.0.3
info:
  title: PocketHive Scenario Manager API
  version: "0.1.0"
servers:
  - url: http://localhost:8085
paths:
  /scenarios:
    get:
      summary: List scenarios
      responses:
        '200':
          description: OK
    post:
      summary: Create scenario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
      responses:
        '201':
          description: Created
  /scenarios/{id}:
    get:
      summary: Get scenario
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
    put:
      summary: Update scenario
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Scenario' }
      responses:
        '200': { description: Updated }
    delete:
      summary: Delete scenario
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: Deleted }
  /scenarios/{id}/validate:
    post:
      summary: Validate scenario without running
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
  /scenarios/{id}/apply:
    post:
      summary: Apply a saved scenario (create a run)
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                runPrefix:
                  type: string
                startAt:
                  type: string
                  format: date-time
                dryRun:
                  type: boolean
                  default: false
      responses:
        '202':
          description: Run accepted
  /scenarios/apply:
    post:
      summary: Apply an inline scenario (unsaved) to create a run
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [scenario]
              properties:
                runPrefix: { type: string }
                scenario: { $ref: '#/components/schemas/Scenario' }
      responses:
        '202': { description: Run accepted }
  /runs:
    get:
      summary: List runs
      responses:
        '200': { description: OK }
  /runs/{runId}:
    get:
      summary: Get run status
      parameters:
        - in: path
          name: runId
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
  /runs/{runId}/cancel:
    post:
      summary: Cancel a running scenario
      parameters:
        - in: path
          name: runId
          required: true
          schema: { type: string }
      responses:
        '202': { description: Cancel requested }
  /runs/{runId}/events:
    get:
      summary: Stream run events (SSE or WebSocket upgrade)
      parameters:
        - in: path
          name: runId
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
components:
  schemas:
    Scenario:
      type: object
      description: Scenario payload as defined by scenario-schema-v0.json
